/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package zt.cms.xf.common.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import zt.cms.xf.common.dao.XfactcutpaymainDao;
import zt.cms.xf.common.dto.Xfactcutpaymain;
import zt.cms.xf.common.exceptions.XfactcutpaymainDaoException;
import zt.cms.xf.common.factory.XfactcutpaymainDaoFactory;

public class XfactcutpaymainDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findWhereCpanoEquals("");
		// findWhereCpastatusEquals(null);
		// findWhereCpaamtEquals(null);
		// findWhereRecvcpaamtEquals(null);
		// findWhereGraceperiodEquals(null);
		// findWhereCloseddataEquals(null);
		// findWhereBalancingdateEquals(null);
		// findWhereRecvbrachfeeEquals(null);
		// findWherePaybakbalanceEquals(null);
		// findWhereBrachfeebalanceEquals(null);
		// findWherePaidupbrachfeeEquals(null);
		// findWherePaidupamtEquals(null);
		// findWherePaybackbalanceEquals(null);
		// findWhereLatefeebalanceEquals(null);
		// findWhereBreachfeebalanceEquals(null);
		// findWherePaidupbreachfeeEquals(null);
		// findWherePaidupdateEquals(null);
		// findWhereUnbilledbreachfeeEquals(null);
		// findWhereUnbilledlatefeeEquals(null);
		// findAll();
		// findWhereContractnoEquals("");
		// findWherePoanoEquals(null);
		// findWherePbstatusEquals("");
		// findWherePaybackamtEquals(null);
		// findWherePaybackdateEquals(null);
		// findWhereStartdateEquals(null);
		// findWhereCloseddateEquals(null);
		// findWhereOverduecdEquals("");
		// findWhereChargeoffcdEquals("");
		// findWhereClosedcdEquals("");
		// findWherePrincipalamtEquals(null);
		// findWhereServicechargefeeEquals(null);
		// findWhereOdbPaybackamtEquals(null);
		// findWhereOdbPaybackdateEquals(null);
		// findWhereOdbBreachfeeEquals(null);
		// findWhereOdbLatefeeEquals(null);
		// findWhereOdbChargeoffcdEquals("");
		// findWhereOdbClosedcdEquals("");
		// findWhereOdbStartdateEquals(null);
		// findWhereOdbCloseddateEquals(null);
		// findWhereClientnameEquals("");
		// findWhereClientactEquals("");
		// findWherePaybackactEquals("");
		// findWherePaybackactnameEquals("");
		// findWherePaybackbankidEquals("");
		// findWherePaybackbanknoEquals("");
		// findWherePaybackbanknameEquals("");
		// findWhereRecvactEquals("");
		// findWhereRecvbankidEquals("");
		// findWhereRecvbanknoEquals("");
		// findWhereOperatoridEquals("");
		// findWhereOperatedateEquals(null);
		// findWhereCheckeridEquals("");
		// findWhereCheckdateEquals(null);
		// findWhereCreatoridEquals("");
		// findWhereCreatedateEquals(null);
		// findWhereCreateformEquals("");
		// findWhereUpdatoridEquals("");
		// findWhereUpdatedateEquals(null);
		// findWhereUpdateformEquals("");
		// findWhereCustomerCodeEquals("");
		// findWhereSignAccountNoEquals("");
		// findWhereClientnoEquals("");
		// findWhereClientidtypeEquals("");
		// findWhereClientidEquals("");
		// findWherePrecutpaycdEquals("");
		// findWherePrecutpaydateEquals(null);
	}

	/**
	 * Method 'findWhereCpanoEquals'
	 * 
	 * @param cpano
	 */
	public static void findWhereCpanoEquals(String cpano)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCpanoEquals(cpano);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCpastatusEquals'
	 * 
	 * @param cpastatus
	 */
	public static void findWhereCpastatusEquals(BigDecimal cpastatus)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCpastatusEquals(cpastatus);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCpaamtEquals'
	 * 
	 * @param cpaamt
	 */
	public static void findWhereCpaamtEquals(BigDecimal cpaamt)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCpaamtEquals(cpaamt);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereRecvcpaamtEquals'
	 * 
	 * @param recvcpaamt
	 */
	public static void findWhereRecvcpaamtEquals(BigDecimal recvcpaamt)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereRecvcpaamtEquals(recvcpaamt);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereGraceperiodEquals'
	 * 
	 * @param graceperiod
	 */
	public static void findWhereGraceperiodEquals(BigDecimal graceperiod)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereGraceperiodEquals(graceperiod);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCloseddataEquals'
	 * 
	 * @param closeddata
	 */
	public static void findWhereCloseddataEquals(Date closeddata)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCloseddataEquals(closeddata);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereBalancingdateEquals'
	 * 
	 * @param balancingdate
	 */
	public static void findWhereBalancingdateEquals(Date balancingdate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereBalancingdateEquals(balancingdate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereRecvbrachfeeEquals'
	 * 
	 * @param recvbrachfee
	 */
	public static void findWhereRecvbrachfeeEquals(BigDecimal recvbrachfee)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereRecvbrachfeeEquals(recvbrachfee);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaybakbalanceEquals'
	 * 
	 * @param paybakbalance
	 */
	public static void findWherePaybakbalanceEquals(BigDecimal paybakbalance)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaybakbalanceEquals(paybakbalance);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereBrachfeebalanceEquals'
	 * 
	 * @param brachfeebalance
	 */
	public static void findWhereBrachfeebalanceEquals(BigDecimal brachfeebalance)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereBrachfeebalanceEquals(brachfeebalance);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaidupbrachfeeEquals'
	 * 
	 * @param paidupbrachfee
	 */
	public static void findWherePaidupbrachfeeEquals(BigDecimal paidupbrachfee)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaidupbrachfeeEquals(paidupbrachfee);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaidupamtEquals'
	 * 
	 * @param paidupamt
	 */
	public static void findWherePaidupamtEquals(BigDecimal paidupamt)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaidupamtEquals(paidupamt);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaybackbalanceEquals'
	 * 
	 * @param paybackbalance
	 */
	public static void findWherePaybackbalanceEquals(BigDecimal paybackbalance)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaybackbalanceEquals(paybackbalance);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereLatefeebalanceEquals'
	 * 
	 * @param latefeebalance
	 */
	public static void findWhereLatefeebalanceEquals(BigDecimal latefeebalance)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereLatefeebalanceEquals(latefeebalance);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereBreachfeebalanceEquals'
	 * 
	 * @param breachfeebalance
	 */
	public static void findWhereBreachfeebalanceEquals(BigDecimal breachfeebalance)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereBreachfeebalanceEquals(breachfeebalance);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaidupbreachfeeEquals'
	 * 
	 * @param paidupbreachfee
	 */
	public static void findWherePaidupbreachfeeEquals(BigDecimal paidupbreachfee)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaidupbreachfeeEquals(paidupbreachfee);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaidupdateEquals'
	 * 
	 * @param paidupdate
	 */
	public static void findWherePaidupdateEquals(Date paidupdate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaidupdateEquals(paidupdate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUnbilledbreachfeeEquals'
	 * 
	 * @param unbilledbreachfee
	 */
	public static void findWhereUnbilledbreachfeeEquals(BigDecimal unbilledbreachfee)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereUnbilledbreachfeeEquals(unbilledbreachfee);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUnbilledlatefeeEquals'
	 * 
	 * @param unbilledlatefee
	 */
	public static void findWhereUnbilledlatefeeEquals(BigDecimal unbilledlatefee)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereUnbilledlatefeeEquals(unbilledlatefee);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereContractnoEquals'
	 * 
	 * @param contractno
	 */
	public static void findWhereContractnoEquals(String contractno)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereContractnoEquals(contractno);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePoanoEquals'
	 * 
	 * @param poano
	 */
	public static void findWherePoanoEquals(BigDecimal poano)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePoanoEquals(poano);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePbstatusEquals'
	 * 
	 * @param pbstatus
	 */
	public static void findWherePbstatusEquals(String pbstatus)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePbstatusEquals(pbstatus);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaybackamtEquals'
	 * 
	 * @param paybackamt
	 */
	public static void findWherePaybackamtEquals(BigDecimal paybackamt)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaybackamtEquals(paybackamt);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaybackdateEquals'
	 * 
	 * @param paybackdate
	 */
	public static void findWherePaybackdateEquals(Date paybackdate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaybackdateEquals(paybackdate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStartdateEquals'
	 * 
	 * @param startdate
	 */
	public static void findWhereStartdateEquals(Date startdate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereStartdateEquals(startdate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCloseddateEquals'
	 * 
	 * @param closeddate
	 */
	public static void findWhereCloseddateEquals(Date closeddate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCloseddateEquals(closeddate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOverduecdEquals'
	 * 
	 * @param overduecd
	 */
	public static void findWhereOverduecdEquals(String overduecd)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOverduecdEquals(overduecd);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereChargeoffcdEquals'
	 * 
	 * @param chargeoffcd
	 */
	public static void findWhereChargeoffcdEquals(String chargeoffcd)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereChargeoffcdEquals(chargeoffcd);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereClosedcdEquals'
	 * 
	 * @param closedcd
	 */
	public static void findWhereClosedcdEquals(String closedcd)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereClosedcdEquals(closedcd);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePrincipalamtEquals'
	 * 
	 * @param principalamt
	 */
	public static void findWherePrincipalamtEquals(BigDecimal principalamt)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePrincipalamtEquals(principalamt);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereServicechargefeeEquals'
	 * 
	 * @param servicechargefee
	 */
	public static void findWhereServicechargefeeEquals(BigDecimal servicechargefee)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereServicechargefeeEquals(servicechargefee);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOdbPaybackamtEquals'
	 * 
	 * @param odbPaybackamt
	 */
	public static void findWhereOdbPaybackamtEquals(BigDecimal odbPaybackamt)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOdbPaybackamtEquals(odbPaybackamt);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOdbPaybackdateEquals'
	 * 
	 * @param odbPaybackdate
	 */
	public static void findWhereOdbPaybackdateEquals(Date odbPaybackdate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOdbPaybackdateEquals(odbPaybackdate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOdbBreachfeeEquals'
	 * 
	 * @param odbBreachfee
	 */
	public static void findWhereOdbBreachfeeEquals(BigDecimal odbBreachfee)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOdbBreachfeeEquals(odbBreachfee);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOdbLatefeeEquals'
	 * 
	 * @param odbLatefee
	 */
	public static void findWhereOdbLatefeeEquals(BigDecimal odbLatefee)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOdbLatefeeEquals(odbLatefee);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOdbChargeoffcdEquals'
	 * 
	 * @param odbChargeoffcd
	 */
	public static void findWhereOdbChargeoffcdEquals(String odbChargeoffcd)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOdbChargeoffcdEquals(odbChargeoffcd);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOdbClosedcdEquals'
	 * 
	 * @param odbClosedcd
	 */
	public static void findWhereOdbClosedcdEquals(String odbClosedcd)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOdbClosedcdEquals(odbClosedcd);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOdbStartdateEquals'
	 * 
	 * @param odbStartdate
	 */
	public static void findWhereOdbStartdateEquals(Date odbStartdate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOdbStartdateEquals(odbStartdate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOdbCloseddateEquals'
	 * 
	 * @param odbCloseddate
	 */
	public static void findWhereOdbCloseddateEquals(Date odbCloseddate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOdbCloseddateEquals(odbCloseddate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereClientnameEquals'
	 * 
	 * @param clientname
	 */
	public static void findWhereClientnameEquals(String clientname)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereClientnameEquals(clientname);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereClientactEquals'
	 * 
	 * @param clientact
	 */
	public static void findWhereClientactEquals(String clientact)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereClientactEquals(clientact);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaybackactEquals'
	 * 
	 * @param paybackact
	 */
	public static void findWherePaybackactEquals(String paybackact)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaybackactEquals(paybackact);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaybackactnameEquals'
	 * 
	 * @param paybackactname
	 */
	public static void findWherePaybackactnameEquals(String paybackactname)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaybackactnameEquals(paybackactname);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaybackbankidEquals'
	 * 
	 * @param paybackbankid
	 */
	public static void findWherePaybackbankidEquals(String paybackbankid)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaybackbankidEquals(paybackbankid);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaybackbanknoEquals'
	 * 
	 * @param paybackbankno
	 */
	public static void findWherePaybackbanknoEquals(String paybackbankno)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaybackbanknoEquals(paybackbankno);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaybackbanknameEquals'
	 * 
	 * @param paybackbankname
	 */
	public static void findWherePaybackbanknameEquals(String paybackbankname)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePaybackbanknameEquals(paybackbankname);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereRecvactEquals'
	 * 
	 * @param recvact
	 */
	public static void findWhereRecvactEquals(String recvact)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereRecvactEquals(recvact);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereRecvbankidEquals'
	 * 
	 * @param recvbankid
	 */
	public static void findWhereRecvbankidEquals(String recvbankid)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereRecvbankidEquals(recvbankid);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereRecvbanknoEquals'
	 * 
	 * @param recvbankno
	 */
	public static void findWhereRecvbanknoEquals(String recvbankno)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereRecvbanknoEquals(recvbankno);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOperatoridEquals'
	 * 
	 * @param operatorid
	 */
	public static void findWhereOperatoridEquals(String operatorid)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOperatoridEquals(operatorid);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOperatedateEquals'
	 * 
	 * @param operatedate
	 */
	public static void findWhereOperatedateEquals(Date operatedate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereOperatedateEquals(operatedate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCheckeridEquals'
	 * 
	 * @param checkerid
	 */
	public static void findWhereCheckeridEquals(String checkerid)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCheckeridEquals(checkerid);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCheckdateEquals'
	 * 
	 * @param checkdate
	 */
	public static void findWhereCheckdateEquals(Date checkdate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCheckdateEquals(checkdate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCreatoridEquals'
	 * 
	 * @param creatorid
	 */
	public static void findWhereCreatoridEquals(String creatorid)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCreatoridEquals(creatorid);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCreatedateEquals'
	 * 
	 * @param createdate
	 */
	public static void findWhereCreatedateEquals(Date createdate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCreatedateEquals(createdate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCreateformEquals'
	 * 
	 * @param createform
	 */
	public static void findWhereCreateformEquals(String createform)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCreateformEquals(createform);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUpdatoridEquals'
	 * 
	 * @param updatorid
	 */
	public static void findWhereUpdatoridEquals(String updatorid)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereUpdatoridEquals(updatorid);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUpdatedateEquals'
	 * 
	 * @param updatedate
	 */
	public static void findWhereUpdatedateEquals(Date updatedate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereUpdatedateEquals(updatedate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUpdateformEquals'
	 * 
	 * @param updateform
	 */
	public static void findWhereUpdateformEquals(String updateform)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereUpdateformEquals(updateform);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCustomerCodeEquals'
	 * 
	 * @param customerCode
	 */
	public static void findWhereCustomerCodeEquals(String customerCode)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereCustomerCodeEquals(customerCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSignAccountNoEquals'
	 * 
	 * @param signAccountNo
	 */
	public static void findWhereSignAccountNoEquals(String signAccountNo)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereSignAccountNoEquals(signAccountNo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereClientnoEquals'
	 * 
	 * @param clientno
	 */
	public static void findWhereClientnoEquals(String clientno)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereClientnoEquals(clientno);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereClientidtypeEquals'
	 * 
	 * @param clientidtype
	 */
	public static void findWhereClientidtypeEquals(String clientidtype)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereClientidtypeEquals(clientidtype);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereClientidEquals'
	 * 
	 * @param clientid
	 */
	public static void findWhereClientidEquals(String clientid)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWhereClientidEquals(clientid);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePrecutpaycdEquals'
	 * 
	 * @param precutpaycd
	 */
	public static void findWherePrecutpaycdEquals(String precutpaycd)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePrecutpaycdEquals(precutpaycd);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePrecutpaydateEquals'
	 * 
	 * @param precutpaydate
	 */
	public static void findWherePrecutpaydateEquals(Date precutpaydate)
	{
		try {
			XfactcutpaymainDao _dao = getXfactcutpaymainDao();
			Xfactcutpaymain _result[] = _dao.findWherePrecutpaydateEquals(precutpaydate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getXfactcutpaymainDao'
	 * 
	 * @return XfactcutpaymainDao
	 */
	public static XfactcutpaymainDao getXfactcutpaymainDao()
	{
		return XfactcutpaymainDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Xfactcutpaymain dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getContractno() );
		buf.append( ", " );
		buf.append( dto.getPoano() );
		buf.append( ", " );
		buf.append( dto.getStartdate() );
		buf.append( ", " );
		buf.append( dto.getClientact() );
		buf.append( ", " );
		buf.append( dto.getPaybackact() );
		buf.append( ", " );
		buf.append( dto.getPaybackbankid() );
		buf.append( ", " );
		buf.append( dto.getPaybackbankno() );
		buf.append( ", " );
		buf.append( dto.getRecvact() );
		buf.append( ", " );
		buf.append( dto.getRecvbankid() );
		buf.append( ", " );
		buf.append( dto.getRecvbankno() );
		buf.append( ", " );
		buf.append( dto.getCreatorid() );
		buf.append( ", " );
		buf.append( dto.getCreatedate() );
		buf.append( ", " );
		buf.append( dto.getCreateform() );
		buf.append( ", " );
		buf.append( dto.getUpdatorid() );
		buf.append( ", " );
		buf.append( dto.getUpdatedate() );
		buf.append( ", " );
		buf.append( dto.getUpdateform() );
		buf.append( ", " );
		buf.append( dto.getPbstatus() );
		buf.append( ", " );
		buf.append( dto.getPaybackamt() );
		buf.append( ", " );
		buf.append( dto.getPaybackdate() );
		buf.append( ", " );
		buf.append( dto.getCloseddate() );
		buf.append( ", " );
		buf.append( dto.getPaybackbankname() );
		buf.append( ", " );
		buf.append( dto.getOperatorid() );
		buf.append( ", " );
		buf.append( dto.getOperatedate() );
		buf.append( ", " );
		buf.append( dto.getCheckerid() );
		buf.append( ", " );
		buf.append( dto.getCheckdate() );
		buf.append( ", " );
		buf.append( dto.getClientname() );
		buf.append( ", " );
		buf.append( dto.getPaybackactname() );
		buf.append( ", " );
		buf.append( dto.getOverduecd() );
		buf.append( ", " );
		buf.append( dto.getChargeoffcd() );
		buf.append( ", " );
		buf.append( dto.getClosedcd() );
		buf.append( ", " );
		buf.append( dto.getPrincipalamt() );
		buf.append( ", " );
		buf.append( dto.getServicechargefee() );
		buf.append( ", " );
		buf.append( dto.getOdbPaybackamt() );
		buf.append( ", " );
		buf.append( dto.getOdbPaybackdate() );
		buf.append( ", " );
		buf.append( dto.getOdbBreachfee() );
		buf.append( ", " );
		buf.append( dto.getOdbLatefee() );
		buf.append( ", " );
		buf.append( dto.getOdbChargeoffcd() );
		buf.append( ", " );
		buf.append( dto.getOdbClosedcd() );
		buf.append( ", " );
		buf.append( dto.getOdbStartdate() );
		buf.append( ", " );
		buf.append( dto.getOdbCloseddate() );
		buf.append( ", " );
		buf.append( dto.getCustomerCode() );
		buf.append( ", " );
		buf.append( dto.getSignAccountNo() );
		buf.append( ", " );
		buf.append( dto.getClientno() );
		buf.append( ", " );
		buf.append( dto.getClientidtype() );
		buf.append( ", " );
		buf.append( dto.getClientid() );
		buf.append( ", " );
		buf.append( dto.getPrecutpaycd() );
		buf.append( ", " );
		buf.append( dto.getPrecutpaydate() );
		System.out.println( buf.toString() );
	}

}
