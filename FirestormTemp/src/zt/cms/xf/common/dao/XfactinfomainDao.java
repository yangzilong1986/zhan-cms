/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package zt.cms.xf.common.dao;

import java.util.Date;
import java.math.BigDecimal;
import zt.cms.xf.common.dto.*;
import zt.cms.xf.common.exceptions.*;

public interface XfactinfomainDao
{
	/** 
	 * Inserts a new row in the XFACTINFOMAIN table.
	 */
	public XfactinfomainPk insert(Xfactinfomain dto) throws XfactinfomainDaoException;

	/** 
	 * Updates a single row in the XFACTINFOMAIN table.
	 */
	public void update(XfactinfomainPk pk, Xfactinfomain dto) throws XfactinfomainDaoException;

	/** 
	 * Deletes a single row in the XFACTINFOMAIN table.
	 */
	public void delete(XfactinfomainPk pk) throws XfactinfomainDaoException;

	/** 
	 * Returns the rows from the XFACTINFOMAIN table that matches the specified primary-key value.
	 */
	public Xfactinfomain findByPrimaryKey(XfactinfomainPk pk) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'CONTRACTNO = :contractno'.
	 */
	public Xfactinfomain findByPrimaryKey(String contractno) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria ''.
	 */
	public Xfactinfomain[] findAll() throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'CONTRACTNO = :contractno'.
	 */
	public Xfactinfomain[] findWhereContractnoEquals(String contractno) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'POANO = :poano'.
	 */
	public Xfactinfomain[] findWherePoanoEquals(String poano) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'STARTDATE = :startdate'.
	 */
	public Xfactinfomain[] findWhereStartdateEquals(Date startdate) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'ENDDATE = :enddate'.
	 */
	public Xfactinfomain[] findWhereEnddateEquals(Date enddate) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'DURATION = :duration'.
	 */
	public Xfactinfomain[] findWhereDurationEquals(BigDecimal duration) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'CURNO = :curno'.
	 */
	public Xfactinfomain[] findWhereCurnoEquals(String curno) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'CONTRACTAMT = :contractamt'.
	 */
	public Xfactinfomain[] findWhereContractamtEquals(BigDecimal contractamt) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'PRINCIPALAMT = :principalamt'.
	 */
	public Xfactinfomain[] findWherePrincipalamtEquals(BigDecimal principalamt) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'FSERVICECHARGE = :fservicecharge'.
	 */
	public Xfactinfomain[] findWhereFservicechargeEquals(BigDecimal fservicecharge) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'POASTATUS = :poastatus'.
	 */
	public Xfactinfomain[] findWherePoastatusEquals(BigDecimal poastatus) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'PAYBAKAMT = :paybakamt'.
	 */
	public Xfactinfomain[] findWherePaybakamtEquals(BigDecimal paybakamt) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'LATEFEEAMT = :latefeeamt'.
	 */
	public Xfactinfomain[] findWhereLatefeeamtEquals(BigDecimal latefeeamt) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'BREACHFEEAMT = :breachfeeamt'.
	 */
	public Xfactinfomain[] findWhereBreachfeeamtEquals(BigDecimal breachfeeamt) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'MANAGERFEEAMT = :managerfeeamt'.
	 */
	public Xfactinfomain[] findWhereManagerfeeamtEquals(BigDecimal managerfeeamt) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'OVERDUETIMES = :overduetimes'.
	 */
	public Xfactinfomain[] findWhereOverduetimesEquals(BigDecimal overduetimes) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'CLIENTACT = :clientact'.
	 */
	public Xfactinfomain[] findWhereClientactEquals(String clientact) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'PAYBACKACT = :paybackact'.
	 */
	public Xfactinfomain[] findWherePaybackactEquals(String paybackact) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'PAYBACKBANKID = :paybackbankid'.
	 */
	public Xfactinfomain[] findWherePaybackbankidEquals(String paybackbankid) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'PAYBACKBANKNO = :paybackbankno'.
	 */
	public Xfactinfomain[] findWherePaybackbanknoEquals(String paybackbankno) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'RECVACT = :recvact'.
	 */
	public Xfactinfomain[] findWhereRecvactEquals(String recvact) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'RECVBANKID = :recvbankid'.
	 */
	public Xfactinfomain[] findWhereRecvbankidEquals(String recvbankid) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'RECVBANKNO = :recvbankno'.
	 */
	public Xfactinfomain[] findWhereRecvbanknoEquals(String recvbankno) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'RECVBANKNAME = :recvbankname'.
	 */
	public Xfactinfomain[] findWhereRecvbanknameEquals(String recvbankname) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'OPERATORID = :operatorid'.
	 */
	public Xfactinfomain[] findWhereOperatoridEquals(String operatorid) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'OPERATEDATE = :operatedate'.
	 */
	public Xfactinfomain[] findWhereOperatedateEquals(Date operatedate) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'CHECKERID = :checkerid'.
	 */
	public Xfactinfomain[] findWhereCheckeridEquals(String checkerid) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'CHECKDATE = :checkdate'.
	 */
	public Xfactinfomain[] findWhereCheckdateEquals(Date checkdate) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'CREATORID = :creatorid'.
	 */
	public Xfactinfomain[] findWhereCreatoridEquals(String creatorid) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'CREATEDATE = :createdate'.
	 */
	public Xfactinfomain[] findWhereCreatedateEquals(Date createdate) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'CREATEFORM = :createform'.
	 */
	public Xfactinfomain[] findWhereCreateformEquals(String createform) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'UPDATORID = :updatorid'.
	 */
	public Xfactinfomain[] findWhereUpdatoridEquals(String updatorid) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'UPDATEDATE = :updatedate'.
	 */
	public Xfactinfomain[] findWhereUpdatedateEquals(Date updatedate) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the criteria 'UPDATEFORM = :updateform'.
	 */
	public Xfactinfomain[] findWhereUpdateformEquals(String updateform) throws XfactinfomainDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the specified arbitrary SQL statement
	 */
	public Xfactinfomain[] findByDynamicSelect(String sql, Object[] sqlParams) throws XfactinfomainDaoException;

	/** 
	 * Returns all rows from the XFACTINFOMAIN table that match the specified arbitrary SQL statement
	 */
	public Xfactinfomain[] findByDynamicWhere(String sql, Object[] sqlParams) throws XfactinfomainDaoException;

}
