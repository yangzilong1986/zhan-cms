/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package zt.cms.xf.common.dao;

import java.math.BigDecimal;
import java.util.Date;
import zt.cms.xf.common.dto.*;
import zt.cms.xf.common.exceptions.*;

public interface FdcutpaydetltempDao
{
	/** 
	 * Inserts a new row in the FDCUTPAYDETLTEMP table.
	 */
	public FdcutpaydetltempPk insert(Fdcutpaydetltemp dto) throws FdcutpaydetltempDaoException;

	/** 
	 * Updates a single row in the FDCUTPAYDETLTEMP table.
	 */
	public void update(FdcutpaydetltempPk pk, Fdcutpaydetltemp dto) throws FdcutpaydetltempDaoException;

	/** 
	 * Deletes a single row in the FDCUTPAYDETLTEMP table.
	 */
	public void delete(FdcutpaydetltempPk pk) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns the rows from the FDCUTPAYDETLTEMP table that matches the specified primary-key value.
	 */
	public Fdcutpaydetltemp findByPrimaryKey(FdcutpaydetltempPk pk) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'SEQNO = :seqno'.
	 */
	public Fdcutpaydetltemp findByPrimaryKey(String seqno) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria ''.
	 */
	public Fdcutpaydetltemp[] findAll() throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'SEQNO = :seqno'.
	 */
	public Fdcutpaydetltemp[] findWhereSeqnoEquals(String seqno) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'XDKHZD_KHBH = :xdkhzdKhbh'.
	 */
	public Fdcutpaydetltemp[] findWhereXdkhzdKhbhEquals(String xdkhzdKhbh) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'XDKHZD_KHMC = :xdkhzdKhmc'.
	 */
	public Fdcutpaydetltemp[] findWhereXdkhzdKhmcEquals(String xdkhzdKhmc) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'GTHTJH_HTBH = :gthtjhHtbh'.
	 */
	public Fdcutpaydetltemp[] findWhereGthtjhHtbhEquals(String gthtjhHtbh) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'GTHTJH_DATE = :gthtjhDate'.
	 */
	public Fdcutpaydetltemp[] findWhereGthtjhDateEquals(String gthtjhDate) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'GTHTJH_LL = :gthtjhLl'.
	 */
	public Fdcutpaydetltemp[] findWhereGthtjhLlEquals(BigDecimal gthtjhLl) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'GTHTJH_JHJE = :gthtjhJhje'.
	 */
	public Fdcutpaydetltemp[] findWhereGthtjhJhjeEquals(BigDecimal gthtjhJhje) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'GTHTJH_BJJE = :gthtjhBjje'.
	 */
	public Fdcutpaydetltemp[] findWhereGthtjhBjjeEquals(BigDecimal gthtjhBjje) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'GTHTJH_LXJE = :gthtjhLxje'.
	 */
	public Fdcutpaydetltemp[] findWhereGthtjhLxjeEquals(BigDecimal gthtjhLxje) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'GTHTB_ZHBH = :gthtbZhbh'.
	 */
	public Fdcutpaydetltemp[] findWhereGthtbZhbhEquals(String gthtbZhbh) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'CUTPAYACTNO = :cutpayactno'.
	 */
	public Fdcutpaydetltemp[] findWhereCutpayactnoEquals(String cutpayactno) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'BILLSTATUS = :billstatus'.
	 */
	public Fdcutpaydetltemp[] findWhereBillstatusEquals(String billstatus) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'CREATETIME = :createtime'.
	 */
	public Fdcutpaydetltemp[] findWhereCreatetimeEquals(Date createtime) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'FAILREASON = :failreason'.
	 */
	public Fdcutpaydetltemp[] findWhereFailreasonEquals(String failreason) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'REMARK = :remark'.
	 */
	public Fdcutpaydetltemp[] findWhereRemarkEquals(String remark) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'PREFLAG = :preflag'.
	 */
	public Fdcutpaydetltemp[] findWherePreflagEquals(String preflag) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'GTHTJH_HTNM = :gthtjhHtnm'.
	 */
	public Fdcutpaydetltemp[] findWhereGthtjhHtnmEquals(String gthtjhHtnm) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'GTHTJH_JHXH = :gthtjhJhxh'.
	 */
	public Fdcutpaydetltemp[] findWhereGthtjhJhxhEquals(String gthtjhJhxh) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'JOURNALNO = :journalno'.
	 */
	public Fdcutpaydetltemp[] findWhereJournalnoEquals(String journalno) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'REGIONCD = :regioncd'.
	 */
	public Fdcutpaydetltemp[] findWhereRegioncdEquals(String regioncd) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'BANKCD = :bankcd'.
	 */
	public Fdcutpaydetltemp[] findWhereBankcdEquals(String bankcd) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the criteria 'LOCKSTATUS = :lockstatus'.
	 */
	public Fdcutpaydetltemp[] findWhereLockstatusEquals(String lockstatus) throws FdcutpaydetltempDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the specified arbitrary SQL statement
	 */
	public Fdcutpaydetltemp[] findByDynamicSelect(String sql, Object[] sqlParams) throws FdcutpaydetltempDaoException;

	/** 
	 * Returns all rows from the FDCUTPAYDETLTEMP table that match the specified arbitrary SQL statement
	 */
	public Fdcutpaydetltemp[] findByDynamicWhere(String sql, Object[] sqlParams) throws FdcutpaydetltempDaoException;

}
