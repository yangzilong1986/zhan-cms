/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package zt.cms.xf.common.dao;

import java.math.BigDecimal;
import java.util.Date;
import zt.cms.xf.common.dto.*;
import zt.cms.xf.common.exceptions.*;

public interface XfcontractpaysDao
{
	/** 
	 * Inserts a new row in the XFCONTRACTPAYS table.
	 */
	public XfcontractpaysPk insert(Xfcontractpays dto) throws XfcontractpaysDaoException;

	/** 
	 * Updates a single row in the XFCONTRACTPAYS table.
	 */
	public void update(XfcontractpaysPk pk, Xfcontractpays dto) throws XfcontractpaysDaoException;

	/** 
	 * Deletes a single row in the XFCONTRACTPAYS table.
	 */
	public void delete(XfcontractpaysPk pk) throws XfcontractpaysDaoException;

	/** 
	 * Returns the rows from the XFCONTRACTPAYS table that matches the specified primary-key value.
	 */
	public Xfcontractpays findByPrimaryKey(XfcontractpaysPk pk) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'CONTRACTNO = :contractno AND POANO = :poano'.
	 */
	public Xfcontractpays findByPrimaryKey(String contractno, BigDecimal poano) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria ''.
	 */
	public Xfcontractpays[] findAll() throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'CONTRACTNO = :contractno'.
	 */
	public Xfcontractpays[] findWhereContractnoEquals(String contractno) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'CPAAMT = :cpaamt'.
	 */
	public Xfcontractpays[] findWhereCpaamtEquals(BigDecimal cpaamt) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'STARTDATE = :startdate'.
	 */
	public Xfcontractpays[] findWhereStartdateEquals(Date startdate) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'GRACEPERIOD = :graceperiod'.
	 */
	public Xfcontractpays[] findWhereGraceperiodEquals(BigDecimal graceperiod) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'POANO = :poano'.
	 */
	public Xfcontractpays[] findWherePoanoEquals(BigDecimal poano) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'PAYBACKACT = :paybackact'.
	 */
	public Xfcontractpays[] findWherePaybackactEquals(String paybackact) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'RECVACT = :recvact'.
	 */
	public Xfcontractpays[] findWhereRecvactEquals(String recvact) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'CPATYPE = :cpatype'.
	 */
	public Xfcontractpays[] findWhereCpatypeEquals(BigDecimal cpatype) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'PAYBACKBANKID = :paybackbankid'.
	 */
	public Xfcontractpays[] findWherePaybackbankidEquals(String paybackbankid) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'PAYBACKBANKNO = :paybackbankno'.
	 */
	public Xfcontractpays[] findWherePaybackbanknoEquals(String paybackbankno) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'RECVBANKID = :recvbankid'.
	 */
	public Xfcontractpays[] findWhereRecvbankidEquals(String recvbankid) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'RECVBANKNO = :recvbankno'.
	 */
	public Xfcontractpays[] findWhereRecvbanknoEquals(String recvbankno) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'CREATORID = :creatorid'.
	 */
	public Xfcontractpays[] findWhereCreatoridEquals(String creatorid) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'CREATEDATE = :createdate'.
	 */
	public Xfcontractpays[] findWhereCreatedateEquals(Date createdate) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'CREATEFORM = :createform'.
	 */
	public Xfcontractpays[] findWhereCreateformEquals(String createform) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'UPDATORID = :updatorid'.
	 */
	public Xfcontractpays[] findWhereUpdatoridEquals(String updatorid) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'UPDATEDATE = :updatedate'.
	 */
	public Xfcontractpays[] findWhereUpdatedateEquals(Date updatedate) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'UPDATEFORM = :updateform'.
	 */
	public Xfcontractpays[] findWhereUpdateformEquals(String updateform) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'PAYBACKACTNAME = :paybackactname'.
	 */
	public Xfcontractpays[] findWherePaybackactnameEquals(String paybackactname) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'PRINCIPALAMT = :principalamt'.
	 */
	public Xfcontractpays[] findWherePrincipalamtEquals(BigDecimal principalamt) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the criteria 'SERVICECHARGEFEE = :servicechargefee'.
	 */
	public Xfcontractpays[] findWhereServicechargefeeEquals(BigDecimal servicechargefee) throws XfcontractpaysDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the specified arbitrary SQL statement
	 */
	public Xfcontractpays[] findByDynamicSelect(String sql, Object[] sqlParams) throws XfcontractpaysDaoException;

	/** 
	 * Returns all rows from the XFCONTRACTPAYS table that match the specified arbitrary SQL statement
	 */
	public Xfcontractpays[] findByDynamicWhere(String sql, Object[] sqlParams) throws XfcontractpaysDaoException;

}
