/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package zt.cms.xf.common.dao;

import java.math.BigDecimal;
import zt.cms.xf.common.dto.*;
import zt.cms.xf.common.exceptions.*;

public interface XfvappinfoDao
{
	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria ''.
	 */
	public Xfvappinfo[] findAll() throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'APPNO = :appno'.
	 */
	public Xfvappinfo findWhereAppnoEquals(String appno) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'CLIENTID = :clientid'.
	 */
	public Xfvappinfo[] findWhereClientidEquals(String clientid) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'CLIENTIDTYPE = :clientidtype'.
	 */
	public Xfvappinfo[] findWhereClientidtypeEquals(String clientidtype) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'CLIENTNAME = :clientname'.
	 */
	public Xfvappinfo[] findWhereClientnameEquals(String clientname) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'APPTYPE = :apptype'.
	 */
	public Xfvappinfo[] findWhereApptypeEquals(String apptype) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'STARTDATE = :startdate'.
	 */
	public Xfvappinfo[] findWhereStartdateEquals(String startdate) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'CONTRACTAMT = :contractamt'.
	 */
	public Xfvappinfo[] findWhereContractamtEquals(BigDecimal contractamt) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'DURATION = :duration'.
	 */
	public Xfvappinfo[] findWhereDurationEquals(String duration) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'SERVICECHARGE = :servicecharge'.
	 */
	public Xfvappinfo[] findWhereServicechargeEquals(BigDecimal servicecharge) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'PARTNERNAME = :partnername'.
	 */
	public Xfvappinfo[] findWherePartnernameEquals(String partnername) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'PARTNERACT = :partneract'.
	 */
	public Xfvappinfo[] findWherePartneractEquals(String partneract) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'COMMNAME = :commname'.
	 */
	public Xfvappinfo[] findWhereCommnameEquals(String commname) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'COMMTYPE = :commtype'.
	 */
	public Xfvappinfo[] findWhereCommtypeEquals(String commtype) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'COMMNUM = :commnum'.
	 */
	public Xfvappinfo[] findWhereCommnumEquals(String commnum) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'LATEFEERATE = :latefeerate'.
	 */
	public Xfvappinfo[] findWhereLatefeerateEquals(BigDecimal latefeerate) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'BREACHFEERATE = :breachfeerate'.
	 */
	public Xfvappinfo[] findWhereBreachfeerateEquals(BigDecimal breachfeerate) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'LOWESTLATEFEE = :lowestlatefee'.
	 */
	public Xfvappinfo[] findWhereLowestlatefeeEquals(BigDecimal lowestlatefee) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'MANAGERFEERATE = :managerfeerate'.
	 */
	public Xfvappinfo[] findWhereManagerfeerateEquals(BigDecimal managerfeerate) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'PAYBACKACT = :paybackact'.
	 */
	public Xfvappinfo[] findWherePaybackactEquals(String paybackact) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the criteria 'PAYBACKBANKID = :paybackbankid'.
	 */
	public Xfvappinfo[] findWherePaybackbankidEquals(String paybackbankid) throws XfvappinfoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the specified arbitrary SQL statement
	 */
	public Xfvappinfo[] findByDynamicSelect(String sql, Object[] sqlParams) throws XfvappinfoDaoException;

	/** 
	 * Returns all rows from the XFVAPPINFO table that match the specified arbitrary SQL statement
	 */
	public Xfvappinfo[] findByDynamicWhere(String sql, Object[] sqlParams) throws XfvappinfoDaoException;

}
